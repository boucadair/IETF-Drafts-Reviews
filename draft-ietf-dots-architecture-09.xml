<?xml version="1.0" encoding="US-ASCII"?>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.9 -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC8174 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY I-D.ietf-dots-requirements SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dots-requirements.xml">
<!ENTITY I-D.ietf-dots-use-cases SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dots-use-cases.xml">
<!ENTITY I-D.ietf-opsawg-nat-yang SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-opsawg-nat-yang.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY RFC0793 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0793.xml">
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC2782 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2782.xml">
<!ENTITY RFC3235 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3235.xml">
<!ENTITY RFC3261 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3261.xml">
<!ENTITY RFC4033 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4033.xml">
<!ENTITY RFC4271 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4271.xml">
<!ENTITY RFC4732 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4732.xml">
<!ENTITY RFC4786 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4786.xml">
<!ENTITY RFC5128 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5128.xml">
<!ENTITY RFC5246 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5246.xml">
<!ENTITY RFC5389 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5389.xml">
<!ENTITY RFC5780 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5780.xml">
<!ENTITY RFC6347 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6347.xml">
<!ENTITY RFC6887 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6887.xml">
<!ENTITY RFC6763 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6763.xml">
<!ENTITY RFC7092 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7092.xml">
<!ENTITY RFC7094 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7094.xml">
<!ENTITY RFC7350 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7350.xml">
<!ENTITY RFC8085 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8085.xml">
]>
<?rfc rfcedstyle="yes"?>
<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc docmapping="yes"?>
<rfc category="info" docName="draft-ietf-dots-architecture-09">
  <front>
    <title abbrev="DOTS Architecture">Distributed-Denial-of-Service Open
    Threat Signaling (DOTS) Architecture</title>

    <author fullname="Andrew Mortensen" initials="A." surname="Mortensen">
      <organization>Arbor Networks</organization>

      <address>
        <postal>
          <street>2727 S. State St</street>

          <city>Ann Arbor, MI</city>

          <code>48104</code>

          <country>United States</country>
        </postal>

        <email>andrewmortensen@gmail.com</email>
      </address>
    </author>

    <author fullname="Flemming Andreasen" initials="F." surname="Andreasen">
      <organization>Cisco</organization>

      <address>
        <postal>
          <street></street>

          <city></city>

          <code></code>

          <country>United States</country>
        </postal>

        <email>fandreas@cisco.com</email>
      </address>
    </author>

    <author fullname="Tirumaleswar Reddy" initials="T." surname="Reddy">
      <organization>McAfee, Inc.</organization>

      <address>
        <postal>
          <street>Embassy Golf Link Business Park</street>

          <city>Bangalore, Karnataka</city>

          <code>560071</code>

          <country>India</country>
        </postal>

        <email>kondtir@gmail.com</email>
      </address>
    </author>

    <author fullname="Nik Teague" initials="N." surname="Teague">
      <organization>Verisign</organization>

      <address>
        <postal>
          <street></street>

          <city></city>

          <code></code>

          <country>United States</country>
        </postal>

        <email>nteague@verisign.com</email>
      </address>
    </author>

    <author fullname="Rich Compton" initials="R." surname="Compton">
      <organization>Charter</organization>

      <address>
        <postal>
          <street></street>

          <city></city>

          <code></code>
        </postal>

        <email>Rich.Compton@charter.com</email>
      </address>
    </author>

    <author fullname="Christopher Gray" initials="C." surname="Gray">
      <organization></organization>

      <address>
        <postal>
          <street></street>

          <city></city>

          <code></code>

          <country>United States</country>
        </postal>

        <email>Christopher_Gray3@cable.comcast.com</email>
      </address>
    </author>

    <date day="28" month="November" year="2018" />

    <area>Security</area>

    <workgroup>DOTS</workgroup>

    <keyword>Internet-Draft</keyword>

    <abstract>
      <t>This document describes an architecture for establishing and
      maintaining Distributed Denial of Service (DDoS) Open Threat Signaling
      (DOTS) within and between domains. The document does not specify
      protocols or protocol extensions, instead focusing on defining
      architectural relationships, components and concepts used in a DOTS
      deployment.</t>
    </abstract>
  </front>

  <middle>
    <section anchor="context-and-motivation" title="Context and Motivation">
      <t>Signaling the need for help defending against an active distributed
      denial of service (DDoS) attack requires a common understanding of
      mechanisms and roles among the parties coordinating defensive response.
      The signaling layer and supplementary messaging is the focus of DDoS
      Open Threat Signaling (DOTS). DOTS defines a method of coordinating
      defensive measures among willing peers to mitigate attacks quickly and
      efficiently, enabling hybrid attack responses coordinated locally at or
      near the target of an active attack, or anywhere in-path between attack
      sources and target. Sample DOTS use cases are elaborated in <xref
      target="I-D.ietf-dots-use-cases"></xref>.</t>

      <t>This document describes an architecture used in establishing,
      maintaining or terminating a DOTS relationship within a domain or
      between domains.</t>

      <section anchor="terminology" title="Terminology">
        <section anchor="key-words" title="Key Words">
          <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
          NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL"
          in this document are to be interpreted as described in BCP14 <xref
          target="RFC2119"></xref> <xref target="RFC8174"></xref>, when, and
          only when, they appear in all capitals.</t>
        </section>

        <section anchor="definition-of-terms" title="Definition of Terms">
          <t>This document uses the terms defined in <xref
          target="I-D.ietf-dots-requirements"></xref>.</t>
        </section>
      </section>

      <section anchor="scope" title="Scope">
        <t>In this architecture, DOTS clients and servers communicate using
        DOTS signaling. As a result of signals from a DOTS client, the DOTS
        server may modify the forwarding path of traffic destined for the
        attack target(s), for example by diverting traffic to a mitigator or
        pool of mitigators, where policy may be applied to distinguish and
        discard attack traffic. Any such policy is deployment-specific.</t>

        <t>The DOTS architecture presented here is applicable across network
        administrative domains &ndash; for example, between an enterprise
        domain and the domain of a third-party attack mitigation service
        &ndash; as well as to a single administrative domain. DOTS is
        generally assumed to be most effective when aiding coordination of
        attack response between two or more participating networks, but single
        domain scenarios are valuable in their own right, as when aggregating
        intra-domain DOTS client signals for inter-domain coordinated attack
        response.</t>

        <t>This document does not address any administrative or business
        agreements that may be established between involved DOTS parties.
        Those considerations are out of scope. Regardless, this document
        assumes necessary authentication and authorization mechanisms are put
        in place so that only authorized clients can invoke the DOTS
        service.</t>

        <t>A detailed set of DOTS requirements are discussed in <xref
        target="I-D.ietf-dots-requirements"></xref>, and the DOTS architecture
        is designed to follow those requirements. Only new behavioral
        requirements are described in this document.</t>
      </section>

      <section anchor="assumptions" title="Assumptions">
        <t>This document makes the following assumptions:</t>

        <t><list style="symbols">
            <t>All domains in which DOTS is deployed are assumed to offer the
            required connectivity between DOTS agents and any intermediary
            network elements, but the architecture imposes no additional
            limitations on the form of connectivity.</t>

            <t>Congestion and resource exhaustion are intended outcomes of a
            DDoS attack <xref target="RFC4732"></xref>. Some operators may
            utilize non-impacted paths or networks for DOTS, but in general
            conditions should be assumed to be hostile and DOTS must be able
            to function in all circumstances, including when the signaling
            path is significantly impaired.</t>

            <t>There is no universal DDoS attack scale threshold triggering a
            coordinated response across administrative domains. A network
            domain administrator, or service or application owner may
            arbitrarily set attack scale threshold triggers, or manually send
            requests for mitigation.</t>

            <t>Mitigation requests may be sent to one or more upstream DOTS
            servers based on criteria determined by DOTS client administrators
            and the underlying network configuration. The number of DOTS
            servers with which a given DOTS client has established
            communications is determined by local policy and is
            deployment-specific. For example, a DOTS client of a multi-homed
            network may support built-in policies to establish DOTS
            relationships with DOTS servers located upstream of each
            interconnection link.</t>

            <t>The mitigation capacity and/or capability of domains receiving
            requests for coordinated attack response is opaque to the domains
            sending the request. The domain receiving the DOTS client signal
            may or may not have sufficient capacity or capability to filter
            any or all DDoS attack traffic directed at a target. In either
            case, the upstream DOTS server may redirect a request to another
            DOTS server. Redirection may be local to the redirecting DOTS
            server's domain, or may involve a third-party domain.</t>

            <t>DOTS client and server signals, as well as messages sent
            through the data channel, are sent across any transit networks
            with the same probability of delivery as any other traffic between
            the DOTS client domain and the DOTS server domain. Any
            encapsulation required for successful delivery is left untouched
            by transit network elements. DOTS server and DOTS client cannot
            assume any preferential treatment of DOTS signals. Such
            preferential treatment may be available in some deployments (e.g.,
            intra-domain scenarios), and the DOTS architecture does not
            preclude its use when available. However, DOTS itself does not
            address how that may be done.</t>

            <t>The architecture allows for, but does not assume, the presence
            of Quality of Service (QoS) policy agreements between DOTS-enabled
            peer networks or local QoS prioritization aimed at ensuring
            delivery of DOTS messages between DOTS agents. QoS is an
            operational consideration only, not a functional part of the DOTS
            architecture.</t>

            <t>The signal and data channels are loosely coupled, and may not
            terminate on the same DOTS server.</t>
          </list></t>
      </section>
    </section>

    <section anchor="architecture" title="DOTS Architecture">
      <t>The basic high-level DOTS architecture is illustrated in <xref
      target="fig-basic-arch"></xref>:</t>

      <figure anchor="fig-basic-arch" title="Basic DOTS Architecture">
        <artwork><![CDATA[
    +-----------+            +-------------+
    | Mitigator | ~~~~~~~~~~ | DOTS Server |
    +-----------+            +-------------+
                                    |
                                    |
                                    |
    +---------------+        +-------------+
    | Attack Target | ~~~~~~ | DOTS Client |
    +---------------+        +-------------+
]]></artwork>
      </figure>

      <t>A simple example instantiation of the DOTS architecture could be an
      enterprise as the attack target for a volumetric DDoS attack, and an
      upstream DDoS mitigation service as the mitigator. The enterprise
      (attack target) is connected to the Internet via a link that is getting
      saturated, and the enterprise suspects it is under DDoS attack. The
      enterprise has a DOTS client, which obtains information about the DDoS
      attack, and signals the DOTS server for help in mitigating the attack.
      The DOTS server in turn invokes one or more mitigators, which are tasked
      with mitigating the actual DDoS attack, and hence aim to suppress the
      attack traffic while allowing valid traffic to reach the attack
      target.</t>

      <t>The scope of the DOTS specifications is the interfaces between the
      DOTS client and DOTS server. The interfaces to the attack target and the
      mitigator are out of scope of DOTS. Similarly, the operation of both the
      attack target and the mitigator is out of scope of DOTS. Thus, DOTS
      neither specifies how an attack target decides it is under DDoS attack,
      nor does DOTS specify how a mitigator may actually mitigate such an
      attack. A DOTS client's request for mitigation is advisory in nature,
      and may not lead to any mitigation at all, depending on the DOTS server
      domain's capacity and willingness to mitigate on behalf of the DOTS
      client's domain.</t>

      <t>The DOTS client may be provided with a list of DOTS servers, each
      associated with one or more IP addresses. These addresses may or may not
      be of the same address family. The DOTS client establishes one or more
      sessions by connecting to the provided DOTS server addresses.</t>

      <t>As illustrated in <xref target="fig-interfaces"></xref>, there are
      two interfaces between a DOTS server and a DOTS client; a signal channel
      and (optionally) a data channel.</t>

      <figure anchor="fig-interfaces" title="DOTS Interfaces">
        <artwork><![CDATA[
    +---------------+                                 +---------------+
    |               | <------- Signal Channel ------> |               |
    |  DOTS Client  |                                 |  DOTS Server  |
    |               | <=======  Data Channel  ======> |               |
    +---------------+                                 +---------------+
]]></artwork>
      </figure>

      <t>The primary purpose of the signal channel is for a DOTS client to ask
      a DOTS server for help in mitigating an attack, and for the DOTS server
      to inform the DOTS client about the status of such mitigation. The DOTS
      client does this by sending a client signal, which contains information
      about the attack target(s). The client signal may also include telemetry
      information about the attack, if the DOTS client has such information
      available. The DOTS server in turn sends a server signal to inform the
      DOTS client of whether it will honor the mitigation request. Assuming it
      will, the DOTS server initiates attack mitigation, and periodically
      informs the DOTS client about the status of the mitigation. Similarly,
      the DOTS client periodically informs the DOTS server about the client's
      status, which at a minimum provides client (attack target) health
      information, but it should also include efficacy information about the
      attack mitigation as it is now seen by the client. At some point, the
      DOTS client may decide to terminate the server-side attack mitigation,
      which it indicates to the DOTS server over the signal channel. A
      mitigation may also be terminated if a DOTS client-specified mitigation
      lifetime is exceeded. Note that the signal channel may need to operate
      over a link that is experiencing a DDoS attack and hence is subject to
      severe packet loss and high latency.</t>

      <t>While DOTS is able to request mitigation with just the signal
      channel, the addition of the DOTS data channel provides for additional
      and more efficient capabilities. The primary purpose of the data channel
      is to support DOTS related configuration and policy information exchange
      between the DOTS client and the DOTS server. Examples of such
      information include, but are not limited to:</t>

      <t><list style="symbols">
          <t>Creating identifiers, such as names or aliases, for resources for
          which mitigation may be requested. Such identifiers may then be used
          in subsequent signal channel exchanges to refer more efficiently to
          the resources under attack, as seen in <xref
          target="fig-resource-identifiers"></xref>, using JSON to serialize
          the data:</t>
        </list></t>

      <figure anchor="fig-resource-identifiers"
              title="Protected resource identifiers">
        <artwork><![CDATA[
        {
            "https1": [
                "192.0.2.1:443",
                "198.51.100.2:443",
            ],
            "proxies": [
                "203.0.113.3:3128",
                "[2001:db8:ac10::1]:3128"
            ],
            "api_urls": "https://apiserver.example.com/api/v1",
        }
]]></artwork>
      </figure>

      <t><list style="symbols">
          <t>Drop-list management, which enables a DOTS client to inform the
          DOTS server about sources to suppress.</t>

          <t>Accept-list management, which enables a DOTS client to inform the
          DOTS server about sources from which traffic is always accepted.</t>

          <t>Filter management, which enables a DOTS client to install or
          remove traffic filters dropping or rate-limiting unwanted
          traffic.</t>

          <t>DOTS client provisioning.</t>
        </list></t>

      <t>Note that while it is possible to exchange the above information
      before, during or after a DDoS attack, DOTS requires reliable delivery
      of this information and does not provide any special means for ensuring
      timely delivery of it during an attack. In practice, this means that
      DOTS deployments should not rely on such information being exchanged
      during a DDoS attack.</t>

      <section anchor="operations" title="DOTS Operations">
        <t>DOTS does not prescribe any specific deployment models, however
        DOTS is designed with some specific requirements around the different
        DOTS agents and their relationships.</t>

        <t>First of all, a DOTS agent belongs to a domain that has an identity
        which can be authenticated and authorized. DOTS agents communicate
        with each other over a mutually authenticated signal channel and
        (optionally) data channel. However, before they can do so, a service
        relationship needs to be established between them. The details and
        means by which this is done is outside the scope of DOTS, however an
        example would be for an enterprise A (DOTS client) to sign up for DDoS
        service from provider B (DOTS server). This would establish a
        (service) relationship between the two that enables enterprise A's
        DOTS client to establish a signal channel with provider B's DOTS
        server. A and B will authenticate each other, and B can verify that A
        is authorized for its service.</t>

        <t>From an operational and design point of view, DOTS assumes that the
        above relationship is established prior to a request for DDoS attack
        mitigation. In particular, it is assumed that bi-directional
        communication is possible at this time between the DOTS client and
        DOTS server. Furthermore, it is assumed that additional service
        provisioning, configuration and information exchange can be performed
        by use of the data channel, if operationally required. It is not until
        this point that the mitigation service is available for use.</t>

        <t>Once the mutually authenticated signal channel has been
        established, it will remain active. This is done to increase the
        likelihood that the DOTS client can signal the DOTS server for help
        when the attack target is being flooded, and similarly raise the
        probability that DOTS server signals reach the client regardless of
        inbound link congestion. This does not necessarily imply that the
        attack target and the DOTS client have to be co-located in the same
        administrative domain, but it is expected to be a common scenario.</t>

        <t>DDoS mitigation with the help of an upstream mitigator may involve
        some form of traffic redirection whereby traffic destined for the
        attack target is steered towards the mitigator. Common mechanisms to
        achieve this redirection depend on BGP <xref target="RFC4271"></xref>
        and DNS <xref target="RFC1035"></xref>. The mitigator in turn inspects
        and scrubs the traffic, and forwards the resulting (hopefully
        non-attack) traffic to the attack target. Thus, when a DOTS server
        receives an attack mitigation request from a DOTS client, it can be
        viewed as a way of causing traffic redirection for the attack target
        indicated.</t>

        <t>DOTS relies on mutual authentication and the pre-established
        service relationship between the DOTS client's domain and the DOTS
        server's domain to provide basic authorization. The DOTS server should
        enforce additional authorization mechanisms to restrict the mitigation
        scope a DOTS client can request, but such authorization mechanisms are
        deployment-specific.</t>

        <t>Although co-location of DOTS server and mitigator within the same
        domain is expected to be a common deployment model, it is assumed that
        operators may require alternative models. Nothing in this document
        precludes such alternatives.</t>
      </section>

      <section anchor="components" title="Components">
        <section anchor="dots-client" title="DOTS Client">
          <t>A DOTS client is a DOTS agent from which requests for help
          coordinating attack response originate. The requests may be in
          response to an active, ongoing attack against a target in the DOTS
          client's domain, but no active attack is required for a DOTS client
          to request help. Operators may wish to have upstream mitigators in
          the network path for an indefinite period, and are restricted only
          by business relationships when it comes to duration and scope of
          requested mitigation.</t>

          <t>The DOTS client requests attack response coordination from a DOTS
          server over the signal channel, including in the request the DOTS
          client's desired mitigation scoping, as described in <xref
          target="I-D.ietf-dots-requirements"></xref>. The actual mitigation
          scope and countermeasures used in response to the attack are up to
          the DOTS server and mitigator operators, as the DOTS client may have
          a narrow perspective on the ongoing attack. As such, the DOTS
          client's request for mitigation should be considered advisory:
          guarantees of DOTS server availability or mitigation capacity
          constitute service level agreements and are out of scope for this
          document.</t>

          <t>The DOTS client adjusts mitigation scope and provides available
          mitigation feedback (e.g., mitigation efficacy) at the direction of
          its local administrator. Such direction may involve manual or
          automated adjustments in response to updates from the DOTS
          server.</t>

          <t>To provide a metric of signal health and distinguish an idle
          signal channel from a disconnected or defunct session, the DOTS
          client sends a heartbeat over the signal channel to maintain its
          half of the channel. The DOTS client similarly expects a heartbeat
          from the DOTS server, and may consider a session terminated in the
          extended absence of a DOTS server heartbeat.</t>
        </section>

        <section anchor="dots-server" title="DOTS Server">
          <t>A DOTS server is a DOTS agent capable of receiving, processing
          and possibly acting on requests for help coordinating attack
          response from DOTS clients. The DOTS server authenticates and
          authorizes DOTS clients as described in <xref
          target="dots-sessions"></xref>, and maintains session state,
          tracking requests for mitigation, reporting on the status of active
          mitigations, and terminating sessions in the extended absence of a
          client heartbeat or when a session times out.</t>

          <t>Assuming the preconditions discussed below exist, a DOTS client
          maintaining an active session with a DOTS server may reasonably
          expect some level of mitigation in response to a request for
          coordinated attack response.</t>

          <t>The DOTS server enforces authorization of DOTS clients' signals
          for mitigation. The mechanism of enforcement is not in scope for
          this document, but is expected to restrict requested mitigation
          scope to addresses, prefixes, and/or services owned by the DOTS
          client's administrative domain, such that a DOTS client from one
          domain is not able to influence the network path to another domain.
          A DOTS server MUST reject requests for mitigation of resources not
          owned by the requesting DOTS client's administrative domain. A DOTS
          server MAY also refuse a DOTS client's mitigation request for
          arbitrary reasons, within any limits imposed by business or service
          level agreements between client and server domains. If a DOTS server
          refuses a DOTS client's request for mitigation, the DOTS server MUST
          include the refusal reason in the server signal sent to the
          client.</t>

          <t>A DOTS server is in regular contact with one or more mitigators.
          If a DOTS server accepts a DOTS client's request for help, the DOTS
          server forwards a translated form of that request to the
          mitigator(s) responsible for scrubbing attack traffic. Note that the
          form of the translated request passed from the DOTS server to the
          mitigator is not in scope: it may be as simple as an alert to
          mitigator operators, or highly automated using vendor or open
          application programming interfaces supported by the mitigator. The
          DOTS server MUST report the actual scope of any mitigation enabled
          on behalf of a client.</t>

          <t>The DOTS server SHOULD retrieve available metrics for any
          mitigations activated on behalf of a DOTS client, and SHOULD include
          them in server signals sent to the DOTS client originating the
          request for mitigation.</t>

          <t>To provide a metric of signal health and distinguish an idle
          signal channel from a disconnected or defunct channel, the DOTS
          server MUST send a heartbeat over the signal channel to maintain its
          half of the channel. The DOTS server similarly expects a heartbeat
          from the DOTS client, and MAY consider a session terminated in the
          extended absence of a DOTS client heartbeat.</t>
        </section>

        <section anchor="dots-gateway" title="DOTS Gateway">
          <t>Traditional client/server relationships may be expanded by
          chaining DOTS sessions. This chaining is enabled through "logical
          concatenation" of a DOTS server and a DOTS client, resulting in an
          application analogous to the Session Initiation Protocol (SIP) <xref
          target="RFC3261"></xref> logical entity of a Back-to-Back User Agent
          (B2BUA) <xref target="RFC7092"></xref>. The term DOTS gateway is
          used here in the descriptions of selected scenarios involving this
          application.</t>

          <t>A DOTS gateway may be deployed client-side, server-side or both.
          The gateway may terminate multiple discrete client connections and
          may aggregate these into a single or multiple DOTS sessions.</t>

          <t>The DOTS gateway will appear as a server to its downstream agents
          and as a client to its upstream agents, a functional concatenation
          of the DOTS client and server roles, as depicted in <xref
          target="fig-dots-gateway"></xref>:</t>

          <figure anchor="fig-dots-gateway" title="DOTS gateway">
            <artwork><![CDATA[
                      +-------------+
                      |    | D |    |
      +----+          |    | O |    |         +----+
      | c1 |----------| s1 | T | c2 |---------| s2 |
      +----+          |    | S |    |         +----+
                      |    | G |    |
                      +-------------+
]]></artwork>
          </figure>

          <t>The DOTS gateway MUST perform full stack DOTS session termination
          and reorigination between its client and server side. The details of
          how this is achieved are implementation specific. The DOTS protocol
          does not include any special features related to DOTS gateways, and
          hence from a DOTS perspective, whenever a DOTS gateway is present,
          the DOTS session simply terminates/originates there.</t>
        </section>
      </section>

      <section anchor="agent-relationships" title="DOTS Agent Relationships">
        <t>So far, we have only considered a relatively simple scenario of a
        single DOTS client associated with a single DOTS server, however DOTS
        supports more advanced relationships.</t>

        <t>A DOTS server may be associated with one or more DOTS clients, and
        those DOTS clients may belong to different domains. An example
        scenario is a mitigation provider serving multiple attack targets
        (<xref target="fig-multi-client-server"></xref>).</t>

        <figure anchor="fig-multi-client-server"
                title="DOTS server with multiple clients">
          <artwork><![CDATA[
   DOTS clients       DOTS server
   +---+
   | c |-----------
   +---+           \
   c1.example.org   \
                     \
   +---+              \ +---+
   | c |----------------| S |
   +---+              / +---+
   c1.example.com    /  dots1.example.net
                    /
   +---+           /
   | c |-----------
   +---+
   c2.example.com
]]></artwork>
        </figure>

        <t>A DOTS client may be associated with one or more DOTS servers, and
        those DOTS servers may belong to different domains. This may be to
        ensure high availability or co-ordinate mitigation with more than one
        directly connected ISP. An example scenario is for an enterprise to
        have DDoS mitigation service from multiple providers, as shown in
        <xref target="fig-multi-homed-client"></xref>.</t>

        <figure anchor="fig-multi-homed-client"
                title="Multi-Homed DOTS Client">
          <artwork><![CDATA[
   DOTS client        DOTS servers
                       +---+
            -----------| S |
           /           +---+
          /            dots1.example.net
         /
   +---+/              +---+
   | c |---------------| S |
   +---+\              +---+
         \             dots.example.org
          \
           \           +---+
            -----------| S |
                       +---+
   c.example.com       dots2.example.net
]]></artwork>
        </figure>

        <t>Deploying a multi-homed client requires extra care and planning, as
        the DOTS servers with which the multi-homed client communicates may
        not be affiliated. Should the multi-homed client simultaneously
        request for mitigation from all servers with which it has established
        signal channels, the client may unintentionally inflict additional
        network disruption on the resources it intends to protect. In one of
        the worst cases, a multi-homed DOTS client could cause a permanent
        routing loop of traffic destined for the client's protected services,
        as the uncoordinated DOTS servers' mitigators all try to divert that
        traffic to their own scrubbing centers.</t>

        <t>The DOTS protocol itself provides no fool-proof method to prevent
        such self-inflicted harms as a result deploying multi-homed DOTS
        clients. If DOTS client implementations nevertheless include support
        for multi-homing, they are expected to be aware of the risks, and
        consequently to include measures aimed at reducing the likelihood of
        negative outcomes. Simple measures might include:</t>

        <t><list style="symbols">
            <t>Requesting mitigation serially, ensuring only one mitigation
            request for a given address space is active at any given time;</t>

            <t>Dividing the protected resources among the DOTS servers, such
            that no two mitigators will be attempting to divert and scrub the
            same traffic;</t>

            <t>Restricting multi-homing to deployments in which all DOTS
            servers are coordinating management of a shared pool of mitigation
            resources.</t>
          </list></t>

        <section anchor="gatewayed-signaling" title="Gatewayed Signaling">
          <t>As discussed in <xref target="dots-gateway"></xref>, a DOTS
          gateway is a logical function chaining DOTS sessions through
          concatenation of a DOTS server and DOTS client.</t>

          <t>An example scenario, as shown in <xref
          target="fig-client-gateway-agg"></xref> and <xref
          target="fig-client-gateway-noagg"></xref>, is for an enterprise to
          have deployed multiple DOTS capable devices which are able to signal
          intra-domain using TCP <xref target="RFC0793"></xref> on
          un-congested links to a DOTS gateway which may then transform these
          to a UDP <xref target="RFC0768"></xref> transport inter-domain where
          connection oriented transports may degrade; this applies to the
          signal channel only, as the data channel requires a
          connection-oriented transport. The relationship between the gateway
          and its upstream agents is opaque to the initial clients.</t>

          <figure anchor="fig-client-gateway-agg"
                  title="Client-Side Gateway with Aggregation">
            <artwork><![CDATA[
      +---+
      | c |\
      +---+ \              +---+
             \-----TCP-----| D |               +---+
      +---+                | O |               |   |
      | c |--------TCP-----| T |------UDP------| S |
      +---+                | S |               |   |
             /-----TCP-----| G |               +---+
      +---+ /              +---+
      | c |/
      +---+
      example.com       example.com           example.net
      DOTS clients      DOTS gateway (DOTSG)  DOTS server
]]></artwork>
          </figure>

          <figure anchor="fig-client-gateway-noagg"
                  title="Client-Side Gateway without Aggregation">
            <artwork><![CDATA[
      +---+
      | c |\
      +---+ \              +---+
             \-----TCP-----| D |------UDP------+---+
      +---+                | O |               |   |
      | c |--------TCP-----| T |------UDP------| S |
      +---+                | S |               |   |
             /-----TCP-----| G |------UDP------+---+
      +---+ /              +---+
      | c |/
      +---+
      example.com       example.com           example.net
      DOTS clients      DOTS gateway (DOTSG)  DOTS server
]]></artwork>
          </figure>

          <t>This may similarly be deployed in the inverse scenario where the
          gateway resides in the server-side domain and may be used to
          terminate and/or aggregate multiple clients to single transport as
          shown in figures <xref target="fig-server-gateway-agg"></xref> and
          <xref target="fig-server-gateway-noagg"></xref>.</t>

          <figure anchor="fig-server-gateway-agg"
                  title="Server-Side Gateway with Aggregation">
            <artwork><![CDATA[
      +---+
      | c |\
      +---+ \              +---+
             \-----UDP-----| D |               +---+
      +---+                | O |               |   |
      | c |--------TCP-----| T |------TCP------| S |
      +---+                | S |               |   |
             /-----TCP-----| G |               +---+
      +---+ /              +---+
      | c |/
      +---+
      example.com       example.net           example.net
      DOTS clients      DOTS gateway (DOTSG)  DOTS server
]]></artwork>
          </figure>

          <figure anchor="fig-server-gateway-noagg"
                  title="Server-Side Gateway without Aggregation">
            <artwork><![CDATA[
      +---+
      | c |\
      +---+ \              +---+
             \-----UDP-----| D |------TCP------+---+
      +---+                | O |               |   |
      | c |--------TCP-----| T |------TCP------| S |
      +---+                | S |               |   |
             /-----UDP-----| G |------TCP------+---+
      +---+ /              +---+
      | c |/
      +---+
      example.com       example.net           example.net
      DOTS clients      DOTS gateway (DOTSG)  DOTS server
]]></artwork>
          </figure>

          <t>This document anticipates scenarios involving multiple DOTS
          gateways. An example is a DOTS gateway at the network client's side,
          and another one at the server side. The first gateway can be located
          at a CPE to aggregate requests from multiple DOTS clients enabled in
          an enterprise network. The second DOTS gateway is deployed on the
          provider side. This scenario can be seen as a combination of the
          client-side and server-side scenarios.</t>
        </section>
      </section>
    </section>

    <section anchor="concepts" title="Concepts">
      <section anchor="dots-sessions" title="DOTS Sessions">
        <t>In order for DOTS to be effective as a vehicle for DDoS mitigation
        requests, one or more DOTS clients must establish ongoing
        communication with one or more DOTS servers. While the preconditions
        for enabling DOTS in or among network domains may also involve
        business relationships, service level agreements, or other formal or
        informal understandings between network operators, such considerations
        are out of scope for this document.</t>

        <t>A DOTS session is established to support bilateral exchange of data
        between an associated DOTS client and a DOTS server. In the DOTS
        architecture, data is exchanged between DOTS agents over signal and
        data channels. As such, a DOTS session can be a DOTS signal channel
        session or a DOTS data channel session.</t>

        <t>A DOTS agent can maintain one or more DOTS sessions. </t>

        <t>A DOTS signal channel session is associated with a single transport
        connection (TCP or UDP session) and an ephemeral security association
        (e.g., a TLS or DTLS session). Similarly, a DOTS data channel session
        is associated with a single TCP connection and an ephemeral TLS
        security association.</t>

        <t>Mitigation requests created using DOTS signal channel are not bound
        to the DOTS signal channel session. Instead, mitigation requests are
        associated with a DOTS client and can be managed using different DOTS
        signal channel sessions.</t>

        <section anchor="dots-session-preconditions" title="Preconditions">
          <t>Prior to establishing a DOTS session between agents, the owners
          of the networks, domains, services or applications involved are
          assumed to have agreed upon the terms of the relationship involved.
          Such agreements are out of scope for this document, but must be in
          place for a functional DOTS architecture.</t>

          <t>It is assumed that as part of any DOTS service agreement, the
          DOTS client is provided with all data and metadata required to
          establish communication with the DOTS server. Such data and metadata
          would include any cryptographic information necessary to meet the
          message confidentiality, integrity and authenticity requirement in
          <xref target="I-D.ietf-dots-requirements"></xref>, and might also
          include the pool of DOTS server addresses and ports the DOTS client
          should use for signal and data channel messaging.</t>
        </section>

        <section anchor="establishing-dots-session"
                 title="Establishing the DOTS Session">
          <t>With the required business agreements in place, the DOTS client
          initiates a DOTS session by contacting its DOTS server(s) over the
          signal channel and (possibly) the data channel. To allow for DOTS
          service flexibility, neither the order of contact nor the time
          interval between channel creations is specified. A DOTS client MAY
          establish signal channel first, and then data channel, or vice
          versa.</t>

          <t>The methods by which a DOTS client receives the address and
          associated service details of the DOTS server are not prescribed by
          this document. For example, a DOTS client may be directly configured
          to use a specific DOTS server IP address and port, and directly
          provided with any data necessary to satisfy the Peer Mutual
          Authentication requirement in <xref
          target="I-D.ietf-dots-requirements"></xref>, such as symmetric or
          asymmetric keys, usernames and passwords, etc. All configuration and
          authentication information in this scenario is provided out-of-band
          by the domain operating the DOTS server.</t>

          <t>At the other extreme, the architecture in this document allows
          for a form of DOTS client auto-provisioning. For example, the domain
          operating the DOTS server or servers might provide the client domain
          only with symmetric or asymmetric keys to authenticate the
          provisioned DOTS clients. Only the keys would then be directly
          configured on DOTS clients, but the remaining configuration required
          to provision the DOTS clients could be learned through mechanisms
          similar to DNS SRV <xref target="RFC2782"></xref> or DNS Service
          Discovery <xref target="RFC6763"></xref>.</t>

          <t>The DOTS client SHOULD successfully authenticate and exchange
          messages with the DOTS server over both signal and (if used) data
          channel as soon as possible to confirm that both channels are
          operational.</t>

          <t>As described in <xref
          target="I-D.ietf-dots-requirements"></xref>, the DOTS client can
          configure preferred values for acceptable signal loss, mitigation
          lifetime, and heartbeat intervals when establishing the DOTS signal
          channel session. A DOTS signal channel session is not active until
          DOTS agents have agreed on the values for these DOTS session
          parameters, a process defined by the protocol.</t>

          <t>Once the DOTS client begins receiving DOTS server signals, the
          DOTS session is active. At any time during the DOTS session, the
          DOTS client may use the data channel to manage aliases, manage drop-
          and accept-listed prefixes or addresses, leverage vendor-specific
          extensions, and so on. Note that unlike the signal channel, there is
          no requirement that the data channel remains operational in attack
          conditions (See Data Channel Requirements, <xref
          target="I-D.ietf-dots-requirements"></xref>).</t>
        </section>

        <section anchor="maintaining-dots-session"
                 title="Maintaining the DOTS Session">
          <t>DOTS clients and servers periodically send heartbeats to each
          other over the signal channel, per Operational Requirements
          discussed in <xref target="I-D.ietf-dots-requirements"></xref>. DOTS
          agent operators SHOULD configure the heartbeat interval such that
          the frequency does not lead to accidental denials of service due to
          the overwhelming number of heartbeats a DOTS agent must field.</t>

          <t>Either DOTS agent may consider a DOTS signal channel session
          terminated in the extended absence of a heartbeat from its peer
          agent. The period of that absence will be established in the
          protocol definition.</t>
        </section>
      </section>

      <section anchor="modes-of-signaling" title="Modes of Signaling">
        <t>This section examines the modes of signaling between agents in a
        DOTS architecture.</t>

        <section anchor="direct-signaling" title="Direct Signaling">
          <t>A DOTS session may take the form of direct signaling between the
          DOTS clients and servers, as shown in <xref
          target="fig-direct-signaling"></xref>.</t>

          <figure anchor="fig-direct-signaling" title="Direct Signaling">
            <artwork><![CDATA[
        +-------------+                            +-------------+
        | DOTS client |<------signal session------>| DOTS server |
        +-------------+                            +-------------+
]]></artwork>
          </figure>

          <t>In a direct DOTS session, the DOTS client and server are
          communicating directly. Direct signaling may exist inter- or
          intra-domain. The DOTS session is abstracted from the underlying
          networks or network elements the signals traverse: in direct
          signaling, the DOTS client and server are logically adjacent.</t>
        </section>

        <section anchor="redirected-signaling" title="Redirected Signaling">
          <t>In certain circumstances, a DOTS server may want to redirect a
          DOTS client to an alternative DOTS server for a DOTS signal channel
          session. Such circumstances include but are not limited to:</t>

          <t><list style="symbols">
              <t>Maximum number of DOTS sessions with clients has been
              reached;</t>

              <t>Mitigation capacity exhaustion in the mitigator with which
              the specific DOTS server is communicating;</t>

              <t>Mitigator outage or other downtime, such as scheduled
              maintenance;</t>

              <t>Scheduled DOTS server maintenance;</t>

              <t>Scheduled modifications to the network path between DOTS
              server and DOTS client.</t>
            </list></t>

          <t>A basic redirected DOTS session resembles the following, as shown
          in <xref target="fig-redirected-signaling"></xref>.</t>

          <figure anchor="fig-redirected-signaling"
                  title="Redirected Signaling">
            <artwork><![CDATA[
        +-------------+                            +---------------+
        |             |<-(1)--- DOTS session 1 --->|               |
        |             |                            |               |
        |             |<=(2)== redirect to B ======|               |
        | DOTS client |                            | DOTS server A |
        |             |X-(4)--- DOTS session 1 ---X|               |
        |             |                            |               |
        |             |                            |               |
        +-------------+                            +---------------+
               ^
               |
              (3) DOTS session 2
               |
               v
        +---------------+
        | DOTS server B |
        +---------------+
]]></artwork>
          </figure>

          <t><list style="numbers">
              <t>Previously established DOTS session 1 exists between a DOTS
              client and DOTS server A.</t>

              <t>DOTS server A sends a server signal redirecting the client to
              DOTS server B.</t>

              <t>If the DOTS client does not already have a separate DOTS
              session with the redirection target, the DOTS client initiates
              and establishes DOTS session 2 with DOTS server B.</t>

              <t>Having redirected the DOTS client, DOTS server A ceases
              sending server signals. The DOTS client likewise stops sending
              client signals to DOTS server A. DOTS session 1 is
              terminated.</t>
            </list></t>
        </section>

        <section anchor="recursive-signaling" title="Recursive Signaling">
          <t>DOTS is centered around improving the speed and efficiency of
          coordinated response to DDoS attacks. One scenario not yet discussed
          involves coordination among federated domains operating DOTS servers
          and mitigators.</t>

          <t>In the course of normal DOTS operations, a DOTS client
          communicates the need for mitigation to a DOTS server, and that
          server initiates mitigation on a mitigator with which the server has
          an established service relationship. The operator of the mitigator
          may in turn monitor mitigation performance and capacity, as the
          attack being mitigated may grow in severity beyond the mitigating
          domain's capabilities.</t>

          <t>The operator of the mitigator has limited options in the event a
          DOTS client-requested mitigation is being overwhelmed by the
          severity of the attack. Out-of-scope business or service level
          agreements may permit the mitigating domain to drop the mitigation
          and let attack traffic flow unchecked to the target, but this only
          encourages attack escalation. In the case where the mitigating
          domain is the upstream service provider for the attack target, this
          may mean the mitigating domain and its other services and users
          continue to suffer the incidental effects of the attack.</t>

          <t>A recursive signaling model as shown in <xref
          target="fig-recursive-signaling"></xref> offers an alternative. In a
          variation of the use case "Upstream DDoS Mitigation by an Upstream
          Internet Transit Provider" described in <xref
          target="I-D.ietf-dots-use-cases"></xref>, a domain operating a DOTS
          server and mitigator also operates a DOTS client. This DOTS client
          has an established DOTS session with a DOTS server belonging to a
          separate administrative domain.</t>

          <t>With these preconditions in place, the operator of the mitigator
          being overwhelmed or otherwise performing inadequately may request
          mitigation for the attack target from this separate DOTS-aware
          domain. Such a request recurses the originating mitigation request
          to the secondary DOTS server, in the hope of building a cumulative
          mitigation against the attack.</t>

          <figure anchor="fig-recursive-signaling" title="Recursive Signaling">
            <artwork><![CDATA[
                     example.net domain
                     . . . . . . . . . . . . . . . . .
                     .    Gn                         .
       +----+    1   .  +----+       +-----------+   .
       | Cc |<--------->| Sn |~~~~~~~| Mitigator |   .
       +----+        .  +====+       |     Mn    |   .
                     .  | Cn |       +-----------+   .
     example.com     .  +----+                       .
        client       .    ^                          .
                     . . .|. . . . . . . . . . . . . .
                          |
                        2 |
                          |
                     . . .|. . . . . . . . . . . . . .
                     .    v                          .
                     .  +----+       +-----------+   .
                     .  | So |~~~~~~~| Mitigator |   .
                     .  +----+       |     Mo    |   .
                     .               +-----------+   .
                     .                               .
                     . . . . . . . . . . . . . . . . .
                     example.org domain
]]></artwork>
          </figure>

          <t>In <xref target="fig-recursive-signaling"></xref>, client Cc
          signals a request for mitigation across inter-domain DOTS session 1
          to the DOTS server Sn belonging to the example.net domain. DOTS
          server Sn enables mitigation on mitigator Mn. DOTS server Sn is half
          of DOTS gateway Gn, being deployed logically back-to-back with DOTS
          client Cn, which has pre-existing inter-domain DOTS session 2 with
          the DOTS server So belonging to the example.org domain. At any
          point, DOTS server Sn MAY recurse an on-going mitigation request
          through DOTS client Cn to DOTS server So, in the expectation that
          mitigator Mo will be activated to aid in the defense of the attack
          target.</t>

          <t>Recursive signaling is opaque to the DOTS client. To maximize
          mitigation visibility to the DOTS client, however, the recursing
          domain SHOULD provide recursed mitigation feedback in signals
          reporting on mitigation status to the DOTS client. For example, the
          recursing domain's mitigator should incorporate into mitigation
          status messages available metrics such as dropped packet or byte
          counts from the recursed mitigation.</t>

          <t>DOTS clients involved in recursive signaling must be able to
          withdraw requests for mitigation without warning or justification,
          per <xref target="I-D.ietf-dots-requirements"></xref>.</t>

          <t>Operators recursing mitigation requests MAY maintain the recursed
          mitigation for a brief, protocol-defined period in the event the
          DOTS client originating the mitigation withdraws its request for
          help, as per the discussion of managing mitigation toggling in the
          operational requirements (<xref
          target="I-D.ietf-dots-requirements"></xref>).</t>

          <t>Deployment of recursive signaling may result in traffic
          redirection, examination and mitigation extending beyond the initial
          bilateral relationship between DOTS client and DOTS server. As such,
          client control over the network path of mitigated traffic may be
          reduced. DOTS client operators should be aware of any privacy
          concerns, and work with DOTS server operators employing recursive
          signaling to ensure shared sensitive material is suitably
          protected.</t>
        </section>

        <section anchor="anycast-signaling" title="Anycast Signaling">
          <t>The DOTS architecture does not assume the availability of anycast
          within a DOTS deployment, but neither does the architecture exclude
          it. Domains operating DOTS servers MAY deploy DOTS servers with an
          anycast Service Address as described in BCP 126 <xref
          target="RFC4786"></xref>. In such a deployment, DOTS clients
          connecting to the DOTS Service Address may be communicating with
          distinct DOTS servers, depending on the network configuration at the
          time the DOTS clients connect. Among other benefits, anycast
          signaling potentially offers the following:</t>

          <t><list style="symbols">
              <t>Simplified DOTS client configuration, including service
              discovery through the methods described in <xref
              target="RFC7094"></xref>. In this scenario, the "instance
              discovery" message would be a DOTS client initiating a DOTS
              session to the DOTS server anycast Service Address, to which the
              DOTS server would reply with a redirection to the DOTS server
              unicast address the client should use for DOTS.</t>

              <t>Region- or customer-specific deployments, in which the DOTS
              Service Addresses route to distinct DOTS servers depending on
              the client region or the customer network in which a DOTS client
              resides.</t>

              <t>Operational resiliency, spreading DOTS signaling traffic
              across the DOTS server domain's networks, and thereby also
              reducing the potential attack surface, as described in BCP 126
              <xref target="RFC4786"></xref>.</t>
            </list></t>

          <section anchor="anycast-signaling-considerations"
                   title="Anycast Signaling Considerations">
            <t>As long as network configuration remains stable, anycast DOTS
            signaling is to the individual DOTS client indistinct from direct
            signaling. However, the operational challenges inherent in anycast
            signaling are anything but negligible, and DOTS server operators
            must carefully weigh the risks against the benefits before
            deploying.</t>

            <t>While the DOTS signal channel primarily operates over UDP per
            <xref target="I-D.ietf-dots-requirements"></xref>, the signal
            channel also requires mutual authentication between DOTS agents,
            with associated security state on both ends.</t>

            <t>Network instability is of particular concern with anycast
            signaling, as DOTS signal channels are expected to be long-lived,
            and potentially operating under congested network conditions
            caused by a volumetric DDoS attack.</t>

            <t>For example, a network configuration altering the route to the
            DOTS server during active anycast signaling may cause the DOTS
            client to send messages to a DOTS server other than the one with
            which it initially established a signaling session. That second
            DOTS server may not have the security state of the existing
            session, forcing the DOTS client to initialize a new DOTS session.
            This challenge might in part be mitigated by use of pre-shared
            keys and session resumption <xref target="RFC5246"></xref><xref
            target="RFC6347"></xref>, but keying material must be available to
            all DOTS servers sharing the anycast Service Address in that
            case.</t>

            <t>While the DOTS client will try to establish a new DOTS session
            with the DOTS server now acting as the anycast DOTS Service
            Address, the link between DOTS client and server may be congested
            with attack traffic, making signal session establishment
            difficult. In such a scenario, anycast Service Address instability
            becomes a sort of signal session flapping, with obvious negative
            consequences for the DOTS deployment.</t>

            <t>Anycast signaling deployments similarly must also take into
            account active mitigations. Active mitigations initiated through a
            DOTS session may involve diverting traffic to a scrubbing center.
            If the DOTS session flaps due to anycast changes as described
            above, mitigation may also flap as the DOTS servers sharing the
            anycast DOTS service address toggles mitigation on detecting DOTS
            session loss, depending on whether the client has configured
            mitigation on loss of signal.</t>
          </section>
        </section>

        <section anchor="nat-signaling"
                 title="Signaling Considerations for Network Address Translation">
          <t>Network address translators (NATs) are expected to be a common
          feature of DOTS deployments. The Middlebox Traversal Guidelines in
          <xref target="RFC8085"></xref> include general NAT considerations
          for DOTS deployements when the signal channel is established over
          UDP.</t>

          <t>Additional DOTS-specific considerations arise when NATs are part
          of the DOTS architecture. For example, DDoS attack detection behind
          a NAT will detect attacks against internal addresses. A DOTS client
          subsequently asked to request mitigation for the attacked scope of
          addresses cannot reasonably perform the task, due to the lack of
          externally routable addresses in the mitigation scope.</t>

          <t>The following considerations do not cover all possible scenarios,
          but are meant rather to highlight anticipated common issues when
          signaling through NATs.</t>

          <section anchor="direct-provisioning-of-internal-to-external-address-mappings"
                   title="Direct Provisioning of Internal-to-External Address Mappings">
            <t>Operators may circumvent the problem of translating internal
            addresses or prefixes to externally routable mitigation scopes by
            directly provisioning the mappings of external addresses to
            internal protected resources on the DOTS client. When the operator
            requests mitigation scoped for internal addresses, directly or
            through automated means, the DOTS client looks up the matching
            external addresses or prefixes, and issues a mitigation request
            scoped to that externally routable information.</t>

            <t>When directly provisioning the address mappings, operators must
            ensure the mappings remain up to date, or risk losing the ability
            to request accurate mitigation scopes. To that aim, the DOTS
            client can rely on mechanisms, such as <xref
            target="I-D.ietf-opsawg-nat-yang"></xref> to retrieve static
            explicit mappings. This document does not prescribe the method by
            which mappings are maintained once they are provisioned on the
            DOTS client.</t>
          </section>

          <section anchor="resolving-public-mitigation-scope-with-port-control-protocol-pcp"
                   title="Resolving Public Mitigation Scope with Port Control Protocol (PCP)">
            <t>Port Control Protocol (PCP) <xref target="RFC6887"></xref> may
            be used to retrieve the external addresses/prefixes and/or port
            numbers if the NAT function embeds a PCP server.</t>

            <t>A DOTS client can use the information retrieved by means of PCP
            to feed the DOTS protocol(s) messages that will be sent to a DOTS
            server. These messages will convey the external addresses/prefixes
            as set by the NAT.</t>

            <t>PCP also enables discovery and configuration of the lifetime of
            port mappings instantiated in intermediate NAT devices. Discovery
            of port mapping lifetimes can reduce the dependency on heartbeat
            messages to maintain mappings, and therefore reduce the load on
            DOTS servers and the network.</t>
          </section>

          <section anchor="resolving-public-mitigation-scope-with-session-traversal-utilities-stun"
                   title="Resolving Public Mitigation Scope with Session Traversal Utilities (STUN)">
            <t>An internal resource, e.g., a Web server, can discover its
            reflexive transport address through a STUN Binding
            request/response transaction, as described in <xref
            target="RFC5389"></xref>. After learning its reflexive transport
            address from the STUN server, the internal resource can export its
            reflexive transport address and internal transport address to the
            DOTS client, thereby enabling the DOTS client to request
            mitigation with the correct external scope, as depicted in <xref
            target="fig-nat-stun"></xref>. The mechanism for providing the
            DOTS client with the reflexive transport address and internal
            transport address is unspecified in this document.</t>

            <t>In order to prevent an attacker from modifying the STUN
            messages in transit, the STUN client and server MUST use the
            message-integrity mechanism discussed in Section 10 of <xref
            target="RFC5389"></xref> or use STUN over DTLS <xref
            target="RFC7350"></xref> or use STUN over TLS. If the STUN client
            is behind a NAT that performs Endpoint-Dependent Mapping <xref
            target="RFC5128"></xref>, the internal service cannot provide the
            DOTS client with the reflexive transport address discovered using
            STUN. The behavior of a NAT between the STUN client and the STUN
            server could be discovered using the experimental techniques
            discussed in <xref target="RFC5780"></xref>, but note that there
            is currently no standardized way for a STUN client to reliably
            determine if it is behind a NAT that performs Endpoint-Dependent
            Mapping.</t>

            <figure anchor="fig-nat-stun"
                    title="Resolving mitigation scope with STUN">
              <artwork><![CDATA[
                Binding         Binding
    +--------+  request  +---+  request  +--------+
    |  STUN  |<----------| N |<----------|  STUN  |
    | server |           | A |           | client |
    |        |---------->| T |---------->|        |
    +--------+  Binding  +---+  Binding  +--------+
                response        response    |
                                            | reflexive transport address
                                            | & internal transport address
                                            v
                                         +--------+
                                         |  DOTS  |
                                         | client |
                                         +--------+
]]></artwork>
            </figure>
          </section>

          <section anchor="resolving-requested-mitigation-scope-with-dns"
                   title="Resolving Requested Mitigation Scope with DNS">
            <t>DOTS supports mitigation scoped to DNS names. As discussed in
            <xref target="RFC3235"></xref>, using DNS names instead of IP
            addresses potentially avoids the address translation problem, as
            long as the name is internally and externally resolvable by the
            same name. For example, a detected attack's internal target
            address can be mapped to a DNS name through a reverse lookup. The
            DNS name returned by the reverse lookup can then be provided to
            the DOTS client as the external scope for mitigation. For the
            reverse DNS lookup, DNS Security Extensions (DNSSEC) <xref
            target="RFC4033"></xref> must be used where the authenticity of
            response is critical.</t>
          </section>
        </section>
      </section>

      <section anchor="mit-request-triggers"
               title="Triggering Requests for Mitigation">
        <t><xref target="I-D.ietf-dots-requirements"></xref> places no
        limitation on the circumstances in which a DOTS client operator may
        request mitigation, nor does it demand justification for any
        mitigation request, thereby reserving operational control over DDoS
        defense for the domain requesting mitigation. This architecture
        likewise does not prescribe the network conditions and mechanisms
        triggering a mitigation request from a DOTS client.</t>

        <t>However, considering selected possible mitigation triggers from an
        architectural perspective offers a model for alternative or
        unanticipated triggers for DOTS deployments. In all cases, what
        network conditions merit a mitigation request are at the discretion of
        the DOTS client operator.</t>

        <t>The mitigation request itself is defined by DOTS, however the
        interfaces required to trigger the mitigation request in the following
        scenarios are implementation-specific.</t>

        <section anchor="manual-mit-request" title="Manual Mitigation Request">
          <t>A DOTS client operator may manually prepare a request for
          mitigation, including scope and duration, and manually instruct the
          DOTS client to send the mitigation request to the DOTS server. In
          context, a manual request is a request directly issued by the
          operator without automated decision-making performed by a device
          interacting with the DOTS client. Modes of manual mitigation
          requests include an operator entering a command into a text
          interface, or directly interacting with a graphical interface to
          send the request.</t>

          <t>An operator might do this, for example, in response to notice of
          an attack delivered by attack detection equipment or software, and
          the alerting detector lacks interfaces or is not configured to use
          available interfaces to translate the alert to a mitigation request
          automatically.</t>

          <t>In a variation of the above scenario, the operator may have
          preconfigured on the DOTS client mitigation requests for various
          resources in the operator's domain. When notified of an attack, the
          DOTS client operator manually instructs the DOTS client to send the
          relevant preconfigured mitigation request for the resources under
          attack.</t>

          <t>A further variant involves recursive signaling, as described in
          <xref target="recursive-signaling"></xref>. The DOTS client in this
          case is the second half of a DOTS gateway (back-to-back DOTS server
          and client). As in the previous scenario, the scope and duration of
          the mitigation request are pre-existing, but in this case are
          derived from the mitigation request received from a downstream DOTS
          client by the DOTS server. Assuming the preconditions required by
          <xref target="recursive-signaling"></xref> are in place, the DOTS
          gateway operator may at any time manually request mitigation from an
          upstream DOTS server, sending a mitigation request derived from the
          downstream DOTS client's request.</t>

          <t>The motivations for a DOTS client operator to request mitigation
          manually are not prescribed by this architecture, but are expected
          to include some of the following:</t>

          <t><list style="symbols">
              <t>Notice of an attack delivered via e-mail or alternative
              messaging</t>

              <t>Notice of an attack delivered via phone call</t>

              <t>Notice of an attack delivered through the interface(s) of
              networking monitoring software deployed in the operator's
              domain</t>

              <t>Manual monitoring of network behavior through network
              monitoring software</t>
            </list></t>
        </section>

        <section anchor="auto-conditional-mit"
                 title="Automated Conditional Mitigation Request">
          <t>Unlike manual mitigation requests, which depend entirely on the
          DOTS client operator's capacity to react with speed and accuracy to
          every detected or detectable attack, mitigation requests triggered
          by detected attack conditions reduce the operational burden on the
          DOTS client operator, and minimize the latency between attack
          detection and the start of mitigation.</t>

          <t>Mitigation requests are triggered in this scenario by
          operator-specified network conditions. Attack detection is
          deployment-specific, and not constrained by this architecture.
          Similarly the specifics of a condition are left to the discretion of
          the operator, though common conditions meriting mitigation include
          the following:</t>

          <t><list style="symbols">
              <t>Detected attack exceeding a rate in packets per second
              (pps).</t>

              <t>Detected attack exceeding a rate in bytes per second
              (bps).</t>

              <t>Detected resource exhaustion in an attack target.</t>

              <t>Detected resource exhaustion in the local domain's
              mitigator.</t>

              <t>Number of open connections to an attack target.</t>

              <t>Number of attack sources in a given attack.</t>

              <t>Number of active attacks against targets in the operator's
              domain.</t>

              <t>Conditional detection developed through arbitrary statistical
              analysis or deep learning techniques.</t>

              <t>Any combination of the above.</t>
            </list></t>

          <t>When automated conditional mitigation requests are enabled,
          violations of any of the above conditions, or any additional
          operator-defined conditions, will trigger a mitigation request from
          the DOTS client to the DOTS server. The interfaces between the
          application detecting the condition violation and the DOTS client
          are implementation-specific.</t>
        </section>

        <section anchor="auto-mit-signal-loss"
                 title="Automated Mitigation on Loss of Signal">
          <t>To maintain a DOTS signal channel session, the DOTS client and
          the DOTS server exchange regular but infrequent messages across the
          signal channel. In the absence of an attack, the probability of
          message loss in the signaling channel should be extremely low. Under
          attack conditions, however, some signal loss may be anticipated as
          attack traffic congests the link, depending on the attack type.</t>

          <t>While <xref target="I-D.ietf-dots-requirements"></xref> specifies
          the DOTS protocol be robust when signaling under attack conditions,
          there are nevertheless scenarios in which the DOTS signal is lost in
          spite of protocol best efforts. To handle such scenarios, a DOTS
          operator may request one or more mitigations which are triggered
          only when the DOTS server ceases receiving DOTS client heartbeats
          beyond the miss count or interval permitted by the protocol.</t>

          <t>The impact of mitigating due to loss of signal in either
          direction must be considered carefully before enabling it. Signal
          loss is not caused by links congested with attack traffic alone, and
          as such mitigation requests triggered by signal channel degradation
          in either direction may incur unnecessary costs, in network
          performance and operational expense alike.</t>
        </section>
      </section>
    </section>

    <section anchor="security-considerations" title="Security Considerations">
      <t>This section describes identified security considerations for the
      DOTS architecture.</t>

      <t>DOTS is at risk from three primary attack vectors: agent
      impersonation, traffic injection and signal blocking. These vectors may
      be exploited individually or in concert by an attacker to confuse,
      disable, take information from, or otherwise inhibit DOTS agents.</t>

      <t>Any attacker with the ability to impersonate a legitimate DOTS client
      or server or, indeed, inject false messages into the stream may
      potentially trigger/withdraw traffic redirection, trigger/cancel
      mitigation activities or subvert drop-/accept-lists. From an
      architectural standpoint, operators SHOULD ensure best current practices
      for secure communication are observed for data and signal channel
      confidentiality, integrity and authenticity. Care must be taken to
      ensure transmission is protected by appropriately secure means, reducing
      attack surface by exposing only the minimal required services or
      interfaces. Similarly, received data at rest SHOULD be stored with a
      satisfactory degree of security.</t>

      <t>As many mitigation systems employ diversion to scrub attack traffic,
      operators of DOTS agents SHOULD ensure DOTS sessions are resistant to
      Man-in-the-Middle (MitM) attacks. An attacker with control of a DOTS
      client may negatively influence network traffic by requesting and
      withdrawing requests for mitigation for particular prefixes, leading to
      route or DNS flapping.</t>

      <t>Any attack targeting the availability of DOTS servers may disrupt the
      ability of the system to receive and process DOTS signals resulting in
      failure to fulfill a mitigation request. DOTS agents SHOULD be given
      adequate protections, again in accordance with best current practices
      for network and host security.</t>
    </section>

    <section anchor="contributors" title="Contributors">
      <t><list style="hanging">
          <t hangText="Mohamed Boucadair"><vspace blankLines="0" /> Orange</t>

          <t>mohamed.boucadair@orange.com</t>
        </list></t>
    </section>

    <section anchor="acknowledgments" title="Acknowledgments">
      <t>Thanks to Matt Richardson and Mohamed Boucadair for their comments
      and suggestions.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      &RFC2119;

      &RFC8174;
    </references>

    <references title="Informative References">
      &I-D.ietf-dots-requirements;

      &I-D.ietf-dots-use-cases;

      &I-D.ietf-opsawg-nat-yang;

      &RFC0768;

      &RFC0793;

      &RFC1035;

      &RFC2782;

      &RFC3235;

      &RFC3261;

      &RFC4033;

      &RFC4271;

      &RFC4732;

      &RFC4786;

      &RFC5128;

      &RFC5246;

      &RFC5389;

      &RFC5780;

      &RFC6347;

      &RFC6887;

      &RFC6763;

      &RFC7092;

      &RFC7094;

      &RFC7350;

      &RFC8085;
    </references>
  </back>

  <!-- ##markdown-source:
H4sIANa3/lsAA919e3Pc2HHv/+dToLRVd6XsDCVS2pUsxylT4u5aN9YjojZO
ylZSmBnMEBYGmAAYUoykfPbb79MHwFBSrp1UQj9EzuPgPPr089fd8/k89GVf
FY+zs7Lr23Kx74vV/Kyoy7yaN+v5edFelssie7kr6uzNRVvkfXZebuq8KutN
dvvs5ZvzO9lpu7wo+2LZ79si5ItFW1zCePBW+s6qWdb5Fh61avN1Py+Lfj1f
NX03z92n5vd+FVZ5D58KIYfHPc7Oi+W+LfvrcLXhUcO7q8fZs7ov2rro52c4
WFjm/eOsrNdNCMtmBXN7nO1h4G5ZlmFXPg5Z1q6Xxarrr3Gt10UHr/TN0v1a
1qui7vWFrmn7tlh39vf1NvkTtmppH1422y18194ta9gdewwse5vvdjQnfCXk
+/6iaXFO+DOXf/FrMMLpUfYcnl3UXVHbO7xtp/WqLa4m3m5aGPq0XTRt9qLo
r5r2XWfvwUyLAmZ68vDkYXZ+lJ33sLnw//aBJWwtjl3zCLPs+bP4XrOC5z54
dHzvgXttX/ctfOWXGs5sxQPG5xXbvKweZznNdatT/e0GXz6CjZpe9U9HvLp8
vOqfqmK7RWIbf4DW/bTsls1wufb3PF3n1Ou4xsnXv2Sd65xn9dslTuPwAt8c
Za+L1ep6sLg3Zbvf5lXRXeXt4AO0uOfL03VRzIDal0eH15j9uF3kXXed/dxU
6+z3Zf0ue7LvgAS7LnuVt+8GZ/0krzd51bQw7t/nbZ33+bt8cOTf/3Dv3sPj
8V48q1dlPtyDd0296sv2c2f84ih7U+SbfTHYgxflu+EbtPZ/LNqyA1bz33a2
wGFwVr+9lIkcXtrro+xps931zZB4X5fLi9FbTLYXOdyN9q+wOJk9PvpIHv3b
JT/t8AqeHmU/t/mQPJ9ewMr7ZndRtOnbuISJR/9Xn5Cb37/i/O7/dpkvqgKX
ucy7npYb6qbd5n15Sc95/dPTk+PjX8mvj44fPngcAsoN95ln87OjKJza4t/2
ZVswgx+9u++KOTyqSN9qdl1+tZnD1Zpfw2WTp917+MMj+/VX9+XX43v3v9eZ
PXx0Ir/eP7FX75/8cCy/Prh3X7/24OShvfrw/on9+ugH+fX74xN92vcnD+zV
+4908d8/fHRPfv3h/oOH+uujR/brwx/0aQ/v/eok/vpAf73/vY7w6N4jmG8I
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
lghLse4pjBpFUHfXHPPkwKQsZskvJpb4OpEXH76hCzhPpMgI5uTCDedNtkaM
wlXBrlCq7OT9lCKQLhGHJXqh8kvm1cJ2zhx2PKZMqUnuPmQOpQQzJbpfx4p7
vrrE2jerEeYpNQNMY00f500Ab2tr1iiCld10VcpWVOGzcTisWMom4nps8eSF
cq4DQ8CQBQZDGRdOIotddpuZGddEUanBnq5Pd3waVOIv4h+v9ciVJqYALMaz
nrm96e7/n/DF5bGBUJt2o6+Of/40NQK+fviZwtzOmQFNfPdu/K6bxhKuD72Z
IQuKr4OlPzm1u1Oj371xE+iJJ/6JA+Y3cRYJD5SXOMlWj1VO5tYoKPelZGl5
hgOy1Io+nyVL1vnkcYgdRVhmQQZZ8MEDqvrSzNV7NYJDbBlbhzCqWt3xlWUX
wjV8dv4KnnbgFowBbhp+G2IvNBZOLNP2US8OS/3uAmv8mch3lYM0BvrpwB1R
WvB7e6hagJGF/UzRcCTcw9/0791EwZFsk2/ccIfH1+lPNy4ifRen4q+6m3Jy
5f23vm5XJqeyHN5rmcpJsitTt8+fsV6+5/TO76hu1FkMiuOVOyO9myG/vryU
i5sS9hlMtxYMfaqOh2GACmxIDWCq9LUb52poMX5sNK5DvnY+sxc9NlXJgJFz
DvgdGAGEKLyY1wVYTAKCG9vuolVU1dTUSsbxJiiTxIruZg7aRQAGmDIWzDPo
HTpV0RHsgIBWrK3s2v1OyqwMUkcop6un2FRPrgVMQiB0NzE3VuxhlK7nysuz
weH420p1KgIic9A5AZrTNq/p5Jo9GZpV0+xuLD+rHruws2QI9U7b6YIN4pz2
njN867yDVPYKMy/BjuKateJ1i6UOeis/au66bEksL7GrTL+USj8WJK2xBGVT
zeEFKjFOhbppD0EHqhkwE/ArczkaNF5zTEPMXW3flRH9gV0lR6d3Mg90YqwE
iuu7KAjqp8qvJmit1XjEkemWIOKa62cP0DRXFFHmEwem/07EGKqOnK3EqUf6
BI3sB6sQBNrlfqkeLIechDFrqud6WVhxRyrQsKtcAfMtFoENMjrlbL2OnvpU
5JRI8bOYs0AqLtLrtPed6ptx/TxN0e92uaBNFadCrj/+EIa3fk1pH+VluYqx
rWGCjq8hn4r/GBgBKoFLGNPGGrr4QJwL0iILrAqq2gCRKUNKgCAjAEqI9te8
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
Jr1BbYhcM+H/AV/VO6Z68QAA

-->
</rfc>
